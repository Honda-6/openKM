<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:security="http://www.springframework.org/schema/security"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:jee="http://www.springframework.org/schema/jee"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd
                                 http://www.springframework.org/schema/context
                                 http://www.springframework.org/schema/context/spring-context.xsd
                                 http://www.springframework.org/schema/jee
                                 http://www.springframework.org/schema/jee/spring-jee.xsd">

  <context:component-scan base-package="com.openkm"/>

  <!-- OpenKM API -->
  <beans:import resource="soap.xml"/>
  <beans:import resource="rest.xml"/>
  <beans:import resource="cmis.xml"/>

  <!-- Swagger -->
  <beans:bean id="swagger2Feature" class="com.openkm.core.Swagger2Config" />

  <!--
  <beans:bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
      <beans:property name="targetClass" value="org.springframework.security.core.context.SecurityContextHolder" />
      <beans:property name="targetMethod" value="setStrategyName" />
      <beans:property name="arguments" value="_INHERITABLETHREADLOCAL" />
  </beans:bean>
  -->

  <security:global-method-security secured-annotations="enabled"/>

<!--  &lt;!&ndash; REST &ndash;&gt;-->
<!--  <security:http pattern="/services/rest/**" create-session="stateless">-->
<!--    <security:intercept-url pattern="/**" access="isAuthenticated()"/>-->
<!--    <security:http-basic/>-->
<!--  </security:http>-->

<!--  &lt;!&ndash; Additional filter chain for normal users, matching all other requests &ndash;&gt;-->
<!--  &lt;!&ndash; http://info.michael-simons.eu/2011/01/28/disable-jsessionid-path-parameter-in-java-web-applications/ &ndash;&gt;-->
<!--  <security:http access-decision-manager-ref="accessDecisionManager">-->
<!--    <security:csrf disabled="true"/>-->
<!--    &lt;!&ndash; GWT &ndash;&gt;-->
<!--    <security:intercept-url pattern="/frontend/**" access="isAuthenticated()"/>-->

<!--    &lt;!&ndash; JSPs &ndash;&gt;-->
<!--    <security:intercept-url pattern="/login.jsp" access="isAnonymous()"/>-->
<!--    <security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>-->
<!--    <security:intercept-url pattern="/mobile/**" access="isAuthenticated()"/>-->

<!--    &lt;!&ndash; Servlets &ndash;&gt;-->
<!--    <security:intercept-url pattern="/RepositoryStartup" access="isAuthenticated()"/>-->
<!--    <security:intercept-url pattern="/TextToSpeech" access="isAuthenticated()"/>-->
<!--    <security:intercept-url pattern="/HtmlPreview" access="isAuthenticated()"/>-->
<!--    <security:intercept-url pattern="/SyntaxHighlighter" access="isAuthenticated()"/>-->
<!--    <security:intercept-url pattern="/Test" access="isAuthenticated()"/>-->

<!--    &lt;!&ndash; Extensions &ndash;&gt;-->
<!--    <security:intercept-url pattern="/extension/ZohoFileUpload" access="isAnonymous()"/>-->
<!--    <security:intercept-url pattern="/extension/**" access="isAuthenticated()"/>-->

<!--    &lt;!&ndash; Login page &ndash;&gt;-->
<!--    <security:form-login login-page="/login.jsp"-->
<!--                         authentication-failure-url="/login.jsp?error=1"-->
<!--                         login-processing-url="/j_spring_security_check"-->
<!--                         username-parameter="j_username"-->
<!--                         password-parameter="j_password"/>-->

<!--    <security:access-denied-handler error-page="/unauthorized.jsp" />-->

<!--  </security:http>-->

<!--  &lt;!&ndash; Needed for changing default role prefix &ndash;&gt;-->
<!--  <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">-->
<!--    <beans:constructor-arg>-->
<!--      <beans:list>-->
<!--        <beans:bean class="org.springframework.security.web.access.expression.WebExpressionVoter"/>-->
<!--        <beans:ref bean="roleVoter"/>-->
<!--        <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>-->
<!--      </beans:list>-->
<!--    </beans:constructor-arg>-->
<!--  </beans:bean>-->
  <context:property-placeholder location="classpath:application.properties" />
  <!-- Security access logger -->
  <beans:bean id="loggerListener" class="com.openkm.spring.LoggerListener"/>
  <beans:bean id="keycloakUtils" class="com.openkm.util.KeycloakUtils"/>
  <beans:bean id="keycloakAuthProvider" class="com.openkm.spring.KeycloakAuthenticationProvider"/>
  <jee:jndi-lookup id="dataSource" jndi-name="jdbc/OpenKMDS" resource-ref="true"/>
  <!-- Security configuration moved to $CATALINA_HOME/OpenKM.xml -->
  <!-- WINFIX
  <security:authentication-manager alias="authenticationManager">
      <security:authentication-provider>
          <security:password-encoder hash="md5"/>
          <security:jdbc-user-service
              data-source-ref="dataSource"
              users-by-username-query="select usr_id, usr_password, 1 from OKM_USER where usr_id=? and usr_active='T'"
              authorities-by-username-query="select ur_user, ur_role from OKM_USER_ROLE where ur_user=?"/>
      </security:authentication-provider>
  </security:authentication-manager>
  WINFIX -->
</beans:beans>
